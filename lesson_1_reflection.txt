How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    It can present the difference between two versions

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    It can help you to find typo after each edition.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    It can be easy when you made a typo.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Because usually in a project, there are multiple files. 

How can you use the commands git log and git diff to view the history of files?

    

How might using version control make you more confident to make changes that
could break something?

    You can roll back anytime.

Now that you have your workspace set up, what do you want to try using Git for?

    Contribute to open source organization.

What do you think are pros and cons of manually choosing when to create a commit, 
like you do in git, vs having versions atomatically saved, like Google Docs does?

    You can save a commit in a natual point which is more understandable.

Why do you think some version chontol systems, like Git, allow saving multiple 
files in one commit, while others, like Google Docs, treat each file separately?

    They are for different usage. Git is designed for code management, so it is 
    designed to save multiple files in one commit.

How can you use the commands git log and git diff to view the history of files?

    use git log in repository, use git diff first commit id second commit id

How might using version control make you more confident to make changes that could
break something?

    You can always check out pevious version and find where the bug is.



